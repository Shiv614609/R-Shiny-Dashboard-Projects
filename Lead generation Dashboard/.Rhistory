install.packages("needs")
library(needs)
needs(rjson , RCurl , googleway , dplyr, osrm ,leaflet, ggplot2)
needs(rjson , RCurl , googleway , dplyr, osrm ,leaflet, ggplot2)
install.packages("rjson")
install.packages("Rcurl")
install.packages("RCurl")
install.packages("googleway")
install.packages("dplyr")
install.packages("osrm")
install.packages("leaflet")
needs(rjson , RCurl , googleway , dplyr, osrm ,leaflet, ggplot2)
#src = c(30.538346,-96.691991) #(lat,lon)
#dst = c(30.687838,-96.372954) #(lat,lon)
#Routing with OSRM
#req = paste("http://router.project-osrm.org/", "route/v1/", "driving", "/", src[2], ",", src[1], ";", dst[2], ",", dst[1],        "?alternatives=false&geometries=polyline&steps=true&overview=full&annotations=true", sep = "")
req="http://router.project-osrm.org/route/v1/driving/-96.688238,30.532807;-96.514156,30.517508;-96.448602,30.538976?alternatives=false&geometries=polyline&steps=true&overview=full&annotations=true"
resRaw = RCurl::getURL(utils::URLencode(req), useragent = "R-User")
vres = jsonlite::validate(resRaw)[1]
if (!vres)
resRaw = gsub(pattern = "[\\]", replacement = "tilapia", x = resRaw)
route_json = jsonlite::fromJSON(resRaw)
if (!vres)
route_json$routes$geometry = gsub(pattern = "tilapia", replacement = "\\\\", x = route_json$routes$geometry)
distance = route_json$routes$distance
rm(vres,resRaw,req,src,dst)
#Google elevation service
key_g_elevation = "AIzaSyDKh0yDCcsZ20ucIejWjPV2t4qttHazfcU"
elevation_json = googleway::google_elevation(polyline = route_json$routes$geometry, key = key_g_elevation , location_type = "path" , samples = 512)
route_json$routes$geometry
elevation_json = googleway::google_elevation(polyline = route_json$routes$geometry, key = key_g_elevation , location_type = "path" , samples = 512)
req="http://router.project-osrm.org/route/v1/driving/-96.688238,30.532807;-96.514156,30.517508;-96.448602,30.538976?alternatives=false&geometries=polyline&steps=true&overview=full&annotations=true"
resRaw = RCurl::getURL(utils::URLencode(req), useragent = "R-User")
req="http://router.project-osrm.org/route/v1/driving/-96.688238,30.532807;-96.514156,30.517508;-96.448602,30.538976?alternatives=false&geometries=polyline&steps=true&overview=full&annotations=true"
resRaw = RCurl::getURL(utils::URLencode(req), useragent = "R-User")
vres = jsonlite::validate(resRaw)[1]
if (!vres)
resRaw = gsub(pattern = "[\\]", replacement = "tilapia", x = resRaw)
route_json = jsonlite::fromJSON(resRaw)
if (!vres)
route_json$routes$geometry = gsub(pattern = "tilapia", replacement = "\\\\", x = route_json$routes$geometry)
distance = route_json$routes$distance
rm(vres,resRaw,req,src,dst)
key_g_elevation = "AIzaSyDKh0yDCcsZ20ucIejWjPV2t4qttHazfcU"
elevation_json = googleway::google_elevation(polyline = route_json$routes$geometry, key = key_g_elevation , location_type = "path" , samples = 512)
req="http://router.project-osrm.org/route/v1/driving/-96.688238,30.532807;-96.514156,30.517508;-96.448602,30.538976?alternatives=false&geometries=polyline&steps=true&overview=full&annotations=true"
resRaw = gsub(pattern = "[\\]", replacement = "tilapia", x = resRaw)
resRaw = RCurl::getURL(utils::URLencode(req), useragent = "R-User")
resRaw = gsub(pattern = "[\\]", replacement = "tilapia", x = resRaw)
route_json = jsonlite::fromJSON(resRaw)
route_json$routes$geometry = gsub(pattern = "tilapia", replacement = "\\\\", x = route_json$routes$geometry)
distance = route_json$routes$distance
rm(vres,resRaw,req,src,dst)
key_g_elevation = "AIzaSyDKh0yDCcsZ20ucIejWjPV2t4qttHazfcU"
elevation_json = googleway::google_elevation(polyline = route_json$routes$geometry, key = key_g_elevation , location_type = "path" , samples = 512)
elevation_json = googleway::google_elevation(polyline = route_json$routes$geometry, key = key_g_elevation , location_type = "path" , samples = 512)
route_json$routes$geometry
req="http://router.project-osrm.org/route/v1/driving/-96.688238,30.532807;-96.514156,30.517508;-96.448602,30.538976?alternatives=false&geometries=polyline&steps=true&overview=full&annotations=true"
resRaw = RCurl::getURL(utils::URLencode(req), useragent = "R-User")
route_json = jsonlite::fromJSON(resRaw)
route_json$routes$geometry
distance = route_json$routes$distance
rm(vres,resRaw,req,src,dst)
key_g_elevation = "AIzaSyDKh0yDCcsZ20ucIejWjPV2t4qttHazfcU"
elevation_json = googleway::google_elevation(polyline = route_json$routes$geometry, key = key_g_elevation , location_type = "path" , samples = 512)
r= "amjyDnlcmQsA}E{A_Ha@uCIeBIaBIsAAcAD_AN}@Fg@C}@O}@gC_JO_BW{C_CgVgCqW@kAd@cNT}FBeEAgEKiFy@w^EkCBiAR}BHwAQeDo@iHe@gHKqBCiAF_ATiAb@o@t@cAf@eAHo@Bm@M}@c@aAqA}AiB_Cq@_Be@}@q@gAg@yAWeAU_BWgF@aBRsDXsClBwOReBF_A?_AYcBUgAAe@Bs@Po@Rc@xDcF\a@lPcT`CyCLa@FSBaAC{@Mi@c@w@cHuIc@aAKi@Em@PsA^aCJgAh@aNf@kNJsCNuA^yCNyBN{SLuSEqEKaGGoBQw@a@_BU{@cEcKm@_BWeAo@{Cu@oGe@mGg@qEk@_H?mABk@NgCl@gHP_F?_CIgBMeAQoA{@gEkA{Fa@iDSoBE[Y}A_@mA}FiOiCwGaDmIyAiEg@kBOuAeBeTQoAK]Wk@gBwB]c@o@}@mFgJu@gAsEuHkFwM]cAkE{Kk@iB[oAQy@S_Ba@kDG{BEsCCaOD{BNaA`@}@jJ_PzBwDdEqFrBsDrFiKXs@j@aBRgA@s@Cy@UsCGi@[eLBqCKqCSqBa@oD[cCg@oDaAuHy@gGQ_BIo@m@_RCyAWaMGoGCiBEs@Ko@y@eDIk@Ek@GgDGgJEcEHaBX_DZsCF_@HQPQPGb@@tD^fAHj@AREd@OZU\]fKcMrAcAjAk@hLmE^OrMeFdBi@f@KxHgBn@Sr@YbB_AxNeKj@[l@WlA[p@IfACxMVxB?rW_@zCK|@QxKeAxI{@|AQbHw@lAU`Bc@dBm@nAi@bAi@dI}EnBqAhKuHfBgA`Ac@jBo@|KiD|@c@x@k@r@o@Za@l@_A`JmPnE}G~GeKj@u@jAqAvDoDvSmRrNwKv@q@hBmAhB{@vA_@l@KhI_AbBWv@Q`A]z@a@r@c@jAaAhAoAfA_BvKsOf@o@gAmAuA{A_A_As@o@cA{@qAcAiAs@cAi@a@SaAe@yAi@eA[aAUsA[u@Mw@MeBO{Ku@_BKqAOcAOqASkA[sA]kAe@{Ao@qAo@cAm@aAs@oAaAwAqAkAsAkGoHmAyAgGkH}BqCqCqD}GaIaAgAmCiCu@k@s@g@q@e@s@c@iAk@eAk@k@Uw@[cA_@iA[gAYiASoAQ{C]uAOeEg@{Fo@uUiC{AQcHw@oQoB}Di@qCs@k@SaDmAeCsAsCcB{BmBeAgAs@aAq@_A]g@yBgCsV}[{R}V_LqMoEuEmHiH_GmHaCsC"
r= "amjyDnlcmQsA}E{A_Ha@uCIeBIaBIsAAcAD_AN}@Fg@C}@O}@gC_JO_BW{C_CgVgCqW@kAd@cNT}FBeEAgEKiFy@w^EkCBiAR}BHwAQeDo@iHe@gHKqBCiAF_ATiAb@o@t@cAf@eAHo@Bm@M}@c@aAqA}AiB_Cq@_Be@}@q@gAg@yAWeAU_BWgF@aBRsDXsClBwOReBF_A?_AYcBUgAAe@Bs@Po@Rc@xDcF\a@lPcT`CyCLa@FSBaAC{@Mi@c@w@cHuIc@aAKi@Em@PsA^aCJgAh@aNf@kNJsCNuA^yCNyBN{SLuSEqEKaGGoBQw@a@_BU{@cEcKm@_BWeAo@{Cu@oGe@mGg@qEk@_H?mABk@NgCl@gHP_F?_CIgBMeAQoA{@gEkA{Fa@iDSoBE[Y}A_@mA}FiOiCwGaDmIyAiEg@kBOuAeBeTQoAK]Wk@gBwB]c@o@}@mFgJu@gAsEuHkFwM]cAkE{Kk@iB[oAQy@S_Ba@kDG{BEsCCaOD{BNaA`@}@jJ_PzBwDdEqFrBsDrFiKXs@j@aBRgA@s@Cy@UsCGi@[eLBqCKqCSqBa@oD[cCg@oDaAuHy@gGQ_BIo@m@_RCyAWaMGoGCiBEs@Ko@y@eDIk@Ek@GgDGgJEcEHaBX_DZsCF_@HQPQPGb@@tD^fAHj@AREd@OZU\]fKcMrAcAjAk@hLmE^OrMeFdBi@f@KxHgBn@Sr@YbB_AxNeKj@[l@WlA[p@IfACxMVxB?rW_@zCK|@QxKeAxI{@|AQbHw@lAU`Bc@dBm@nAi@bAi@dI}EnBqAhKuHfBgA`Ac@jBo@|KiD|@c@x@k@r@o@Za@l@_A`JmPnE}G~GeKj@u@jAqAvDoDvSmRrNwKv@q@hBmAhB{@vA_@l@KhI_AbBWv@Q`A]z@a@r@c@jAaAhAoAfA_BvKsOf@o@gAmAuA{A_A_As@o@cA{@qAcAiAs@cAi@a@SaAe@yAi@eA[aAUsA[u@Mw@MeBO{Ku@_BKqAOcAOqASkA[sA]kAe@{Ao@qAo@cAm@aAs@oAaAwAqAkAsAkGoHmAyAgGkH}BqCqCqD}GaIaAgAmCiCu@k@s@g@q@e@s@c@iAk@eAk@k@Uw@[cA_@iA[gAYiASoAQ{C]uAOeEg@{Fo@uUiC{AQcHw@oQoB}Di@qCs@k@SaDmAeCsAsCcB{BmBeAgAs@aAq@_A]g@yBgCsV}[{R}V_LqMoEuEmHiH_GmHaCsC"
elevation_json = googleway::google_elevation(polyline = "amjyDnlcmQsA}E{A_Ha@uCIeBIaBIsAAcAD_AN}@Fg@C}@O}@gC_JO_BW{C_CgVgCqW@kAd@cNT}FBeEAgEKiFy@w^EkCBiAR}BHwAQeDo@iHe@gHKqBCiAF_ATiAb@o@t@cAf@eAHo@Bm@M}@c@aAqA}AiB_Cq@_Be@}@q@gAg@yAWeAU_BWgF@aBRsDXsClBwOReBF_A?_AYcBUgAAe@Bs@Po@Rc@xDcF\a@lPcT`CyCLa@FSBaAC{@Mi@c@w@cHuIc@aAKi@Em@PsA^aCJgAh@aNf@kNJsCNuA^yCNyBN{SLuSEqEKaGGoBQw@a@_BU{@cEcKm@_BWeAo@{Cu@oGe@mGg@qEk@_H?mABk@NgCl@gHP_F?_CIgBMeAQoA{@gEkA{Fa@iDSoBE[Y}A_@mA}FiOiCwGaDmIyAiEg@kBOuAeBeTQoAK]Wk@gBwB]c@o@}@mFgJu@gAsEuHkFwM]cAkE{Kk@iB[oAQy@S_Ba@kDG{BEsCCaOD{BNaA`@}@jJ_PzBwDdEqFrBsDrFiKXs@j@aBRgA@s@Cy@UsCGi@[eLBqCKqCSqBa@oD[cCg@oDaAuHy@gGQ_BIo@m@_RCyAWaMGoGCiBEs@Ko@y@eDIk@Ek@GgDGgJEcEHaBX_DZsCF_@HQPQPGb@@tD^fAHj@AREd@OZU\]fKcMrAcAjAk@hLmE^OrMeFdBi@f@KxHgBn@Sr@YbB_AxNeKj@[l@WlA[p@IfACxMVxB?rW_@zCK|@QxKeAxI{@|AQbHw@lAU`Bc@dBm@nAi@bAi@dI}EnBqAhKuHfBgA`Ac@jBo@|KiD|@c@x@k@r@o@Za@l@_A`JmPnE}G~GeKj@u@jAqAvDoDvSmRrNwKv@q@hBmAhB{@vA_@l@KhI_AbBWv@Q`A]z@a@r@c@jAaAhAoAfA_BvKsOf@o@gAmAuA{A_A_As@o@cA{@qAcAiAs@cAi@a@SaAe@yAi@eA[aAUsA[u@Mw@MeBO{Ku@_BKqAOcAOqASkA[sA]kAe@{Ao@qAo@cAm@aAs@oAaAwAqAkAsAkGoHmAyAgGkH}BqCqCqD}GaIaAgAmCiCu@k@s@g@q@e@s@c@iAk@eAk@k@Uw@[cA_@iA[gAYiASoAQ{C]uAOeEg@{Fo@uUiC{AQcHw@oQoB}Di@qCs@k@SaDmAeCsAsCcB{BmBeAgAs@aAq@_A]g@yBgCsV}[{R}V_LqMoEuEmHiH_GmHaCsC", key = key_g_elevation , location_type = "path" , samples = 512)
elevation_json = googleway::google_elevation(polyline = "amjyDnlcmQsA}E{A_Ha@uCIeBIaBIsAAcAD_AN}@Fg@C}@O}@gC_JO_BW{C_CgVgCqW@kAd@cNT}FBeEAgEKiFy@w^EkCBiAR}BHwAQeDo@iHe@gHKqBCiAF_ATiAb@o@t@cAf@eAHo@Bm@M}@c@aAqA}AiB_Cq@_Be@}@q@gAg@yAWeAU_BWgF@aBRsDXsClBwOReBF_A?_AYcBUgAAe@Bs@Po@Rc@xDcF\a@lPcT`CyCLa@FSBaAC{@Mi@c@w@cHuIc@aAKi@Em@PsA^aCJgAh@aNf@kNJsCNuA^yCNyBN{SLuSEqEKaGGoBQw@a@_BU{@cEcKm@_BWeAo@{Cu@oGe@mGg@qEk@_H?mABk@NgCl@gHP_F?_CIgBMeAQoA{@gEkA{Fa@iDSoBE[Y}A_@mA}FiOiCwGaDmIyAiEg@kBOuAeBeTQoAK]Wk@gBwB]c@o@}@mFgJu@gAsEuHkFwM]cAkE{Kk@iB[oAQy@S_Ba@kDG{BEsCCaOD{BNaA`@}@jJ_PzBwDdEqFrBsDrFiKXs@j@aBRgA@s@Cy@UsCGi@[eLBqCKqCSqBa@oD[cCg@oDaAuHy@gGQ_BIo@m@_RCyAWaMGoGCiBEs@Ko@y@eDIk@Ek@GgDGgJEcEHaBX_DZsCF_@HQPQPGb@@tD^fAHj@AREd@OZU\]fKcMrAcAjAk@hLmE^OrMeFdBi@f@KxHgBn@Sr@YbB_AxNeKj@[l@WlA[p@IfACxMVxB?rW_@zCK|@QxKeAxI{@|AQbHw@lAU`Bc@dBm@nAi@bAi@dI}EnBqAhKuHfBgA`Ac@jBo@|KiD|@c@x@k@r@o@Za@l@_A`JmPnE}G~GeKj@u@jAqAvDoDvSmRrNwKv@q@hBmAhB{@vA_@l@KhI_AbBWv@Q`A]z@a@r@c@jAaAhAoAfA_BvKsOf@o@gAmAuA{A_A_As@o@cA{@qAcAiAs@cAi@a@SaAe@yAi@eA[aAUsA[u@Mw@MeBO{Ku@_BKqAOcAOqASkA[sA]kAe@{Ao@qAo@cAm@aAs@oAaAwAqAkAsAkGoHmAyAgGkH}BqCqCqD}GaIaAgAmCiCu@k@s@g@q@e@s@c@iAk@eAk@k@Uw@[cA_@iA[gAYiASoAQ{C]uAOeEg@{Fo@uUiC{AQcHw@oQoB}Di@qCs@k@SaDmAeCsAsCcB{BmBeAgAs@aAq@_A]g@yBgCsV}[{R}V_LqMoEuEmHiH_GmHaCsC", key = key_g_elevation , location_type = "path" , samples = 512)
elevation_json = googleway::google_elevation(polyline = amjyDnlcmQsA}E{A_Ha@uCIeBIaBIsAAcAD_AN}@Fg@C}@O}@gC_JO_BW{C_CgVgCqW@kAd@cNT}FBeEAgEKiFy@w^EkCBiAR}BHwAQeDo@iHe@gHKqBCiAF_ATiAb@o@t@cAf@eAHo@Bm@M}@c@aAqA}AiB_Cq@_Be@}@q@gAg@yAWeAU_BWgF@aBRsDXsClBwOReBF_A?_AYcBUgAAe@Bs@Po@Rc@xDcF\a@lPcT`CyCLa@FSBaAC{@Mi@c@w@cHuIc@aAKi@Em@PsA^aCJgAh@aNf@kNJsCNuA^yCNyBN{SLuSEqEKaGGoBQw@a@_BU{@cEcKm@_BWeAo@{Cu@oGe@mGg@qEk@_H?mABk@NgCl@gHP_F?_CIgBMeAQoA{@gEkA{Fa@iDSoBE[Y}A_@mA}FiOiCwGaDmIyAiEg@kBOuAeBeTQoAK]Wk@gBwB]c@o@}@mFgJu@gAsEuHkFwM]cAkE{Kk@iB[oAQy@S_Ba@kDG{BEsCCaOD{BNaA`@}@jJ_PzBwDdEqFrBsDrFiKXs@j@aBRgA@s@Cy@UsCGi@[eLBqCKqCSqBa@oD[cCg@oDaAuHy@gGQ_BIo@m@_RCyAWaMGoGCiBEs@Ko@y@eDIk@Ek@GgDGgJEcEHaBX_DZsCF_@HQPQPGb@@tD^fAHj@AREd@OZU\]fKcMrAcAjAk@hLmE^OrMeFdBi@f@KxHgBn@Sr@YbB_AxNeKj@[l@WlA[p@IfACxMVxB?rW_@zCK|@QxKeAxI{@|AQbHw@lAU`Bc@dBm@nAi@bAi@dI}EnBqAhKuHfBgA`Ac@jBo@|KiD|@c@x@k@r@o@Za@l@_A`JmPnE}G~GeKj@u@jAqAvDoDvSmRrNwKv@q@hBmAhB{@vA_@l@KhI_AbBWv@Q`A]z@a@r@c@jAaAhAoAfA_BvKsOf@o@gAmAuA{A_A_As@o@cA{@qAcAiAs@cAi@a@SaAe@yAi@eA[aAUsA[u@Mw@MeBO{Ku@_BKqAOcAOqASkA[sA]kAe@{Ao@qAo@cAm@aAs@oAaAwAqAkAsAkGoHmAyAgGkH}BqCqCqD}GaIaAgAmCiCu@k@s@g@q@e@s@c@iAk@eAk@k@Uw@[cA_@iA[gAYiASoAQ{C]uAOeEg@{Fo@uUiC{AQcHw@oQoB}Di@qCs@k@SaDmAeCsAsCcB{BmBeAgAs@aAq@_A]g@yBgCsV}[{R}V_LqMoEuEmHiH_GmHaCsC , key = key_g_elevation , location_type = "path" , samples = 512)
elevation_json = googleway::google_elevation(polyline = amjyDnlcmQsA}E{A_Ha@uCIeBIaBIsAAcAD_AN}@Fg@C}@O}@gC_JO_BW{C_CgVgCqW@kAd@cNT}FBeEAgEKiFy@w^EkCBiAR}BHwAQeDo@iHe@gHKqBCiAF_ATiAb@o@t@cAf@eAHo@Bm@M}@c@aAqA}AiB_Cq@_Be@}@q@gAg@yAWeAU_BWgF@aBRsDXsClBwOReBF_A?_AYcBUgAAe@Bs@Po@Rc@xDcF\a@lPcT`CyCLa@FSBaAC{@Mi@c@w@cHuIc@aAKi@Em@PsA^aCJgAh@aNf@kNJsCNuA^yCNyBN{SLuSEqEKaGGoBQw@a@_BU{@cEcKm@_BWeAo@{Cu@oGe@mGg@qEk@_H?mABk@NgCl@gHP_F?_CIgBMeAQoA{@gEkA{Fa@iDSoBE[Y}A_@mA}FiOiCwGaDmIyAiEg@kBOuAeBeTQoAK]Wk@gBwB]c@o@}@mFgJu@gAsEuHkFwM]cAkE{Kk@iB[oAQy@S_Ba@kDG{BEsCCaOD{BNaA`@}@jJ_PzBwDdEqFrBsDrFiKXs@j@aBRgA@s@Cy@UsCGi@[eLBqCKqCSqBa@oD[cCg@oDaAuHy@gGQ_BIo@m@_RCyAWaMGoGCiBEs@Ko@y@eDIk@Ek@GgDGgJEcEHaBX_DZsCF_@HQPQPGb@@tD^fAHj@AREd@OZU\]fKcMrAcAjAk@hLmE^OrMeFdBi@f@KxHgBn@Sr@YbB_AxNeKj@[l@WlA[p@IfACxMVxB?rW_@zCK|@QxKeAxI{@|AQbHw@lAU`Bc@dBm@nAi@bAi@dI}EnBqAhKuHfBgA`Ac@jBo@|KiD|@c@x@k@r@o@Za@l@_A`JmPnE}G~GeKj@u@jAqAvDoDvSmRrNwKv@q@hBmAhB{@vA_@l@KhI_AbBWv@Q`A]z@a@r@c@jAaAhAoAfA_BvKsOf@o@gAmAuA{A_A_As@o@cA{@qAcAiAs@cAi@a@SaAe@yAi@eA[aAUsA[u@Mw@MeBO{Ku@_BKqAOcAOqASkA[sA]kAe@{Ao@qAo@cAm@aAs@oAaAwAqAkAsAkGoHmAyAgGkH}BqCqCqD}GaIaAgAmCiCu@k@s@g@q@e@s@c@iAk@eAk@k@Uw@[cA_@iA[gAYiASoAQ{C]uAOeEg@{Fo@uUiC{AQcHw@oQoB}Di@qCs@k@SaDmAeCsAsCcB{BmBeAgAs@aAq@_A]g@yBgCsV}[{R}V_LqMoEuEmHiH_GmHaCsC, key = key_g_elevation , location_type = "path" , samples = 512)
req="http://router.project-osrm.org/route/v1/driving/-96.688238,30.532807;-96.514156,30.517508;-96.448602,30.538976?alternatives=false&geometries=polyline&steps=true&overview=full&annotations=true"
resRaw = RCurl::getURL(utils::URLencode(req), useragent = "R-User")
vres = jsonlite::validate(resRaw)[1]
resRaw = gsub(pattern = "[\\]", replacement = "tilapia", x = resRaw)
route_json = jsonlite::fromJSON(resRaw)
elevation_json = googleway::google_elevation(polyline = route_json$routes$geometry, key = key_g_elevation , location_type = "path" , samples = 512)
route_json$routes$geometry = gsub(pattern = "tilapia", replacement = "\\\\", x = route_json$routes$geometry)
elevation_json = googleway::google_elevation(polyline = route_json$routes$geometry, key = key_g_elevation , location_type = "path" , samples = 512)
src = c(30.538346,-96.691991) #(lat,lon)
dst = c(30.687838,-96.372954) #(lat,lon)
req = paste("http://router.project-osrm.org/", "route/v1/", "driving", "/", src[2], ",", src[1], ";", dst[2], ",", dst[1],        "?alternatives=false&geometries=polyline&steps=true&overview=full&annotations=true", sep = "")
resRaw = RCurl::getURL(utils::URLencode(req), useragent = "R-User")
vres = jsonlite::validate(resRaw)[1]
if (!vres)
resRaw = gsub(pattern = "[\\]", replacement = "tilapia", x = resRaw)
route_json = jsonlite::fromJSON(resRaw)
if (!vres)
route_json$routes$geometry = gsub(pattern = "tilapia", replacement = "\\\\", x = route_json$routes$geometry)
distance = route_json$routes$distance
rm(vres,resRaw,req,src,dst)
key_g_elevation = "AIzaSyDKh0yDCcsZ20ucIejWjPV2t4qttHazfcU"
elevation_json = googleway::google_elevation(polyline = route_json$routes$geometry, key = key_g_elevation , location_type = "path" , samples = 512)
shiny::runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/HISCO/dashboard/project1')
runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/SMB SUITE/Dashboard')
runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/SMB SUITE/Dashboard')
runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/HISCO/dashboard/project1')
req = paste0("http://api.openstreetmap.org/api/0.6/map?bbox=-96.3442677,30.6168618,-96.343405,30.616375")
resRaw = RCurl::getURL(utils::URLencode(req), useragent = "R-User")
xml_data <- XML::xmlToList(resRaw)
req = paste0("http://api.openstreetmap.org/api/0.6/map?bbox=-96.344,30.616,-96.343,30.616")
resRaw = RCurl::getURL(utils::URLencode(req), useragent = "R-User")
xml_data <- XML::xmlToList(resRaw)
xml_data$bounds
xml_data$.attrs
resRaw
req = paste0("http://api.openstreetmap.org/api/0.6/map?bbox=-96.3434,30.616375,-96.34426,30.6168618")
resRaw = RCurl::getURL(utils::URLencode(req), useragent = "R-User")
req = paste0("http://api.openstreetmap.org/api/0.6/map?bbox=-96.3434,30.6163,-96.3442,30.6168")
resRaw = RCurl::getURL(utils::URLencode(req), useragent = "R-User")
runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/SMB SUITE/Dashboard')
runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/SMB SUITE/Dashboard')
runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/SMB SUITE/Dashboard')
runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/HISCO/dashboard/project1')
shiny::runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/HISCO/dashboard/project1')
runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/SMB SUITE/Dashboard')
runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/SMB SUITE/Dashboard')
req = paste0("http://api.openstreetmap.org/api/0.6/map?bbox=-96.3534,30.6063,-96.3342,30.6268")
resRaw = RCurl::getURL(utils::URLencode(req), useragent = "R-User")
xml_data <- XML::xmlToList(resRaw)
xml_data$bounds
xml_data$node
xml_data$node[2]
xml_data$node[[2]]
xml_data$node[2,2]
a=as.data.frame(xml_data$node)
View(a)
a=as.data.frame(xml_data)
xml_data
??XML
xml_data[2]
xml_data[3]
xml_data[4]
length(xml_data)
a=as.data.frame(xml_data[2:9881])
a=as.data.frame(t(xml_data[2:9881]))
View(a)
xml_data[4]
install.packages("osmar")
install.packages("prettymapr")
library(osmar) # (geosphere is inclued in osmar)
library(prettymapr)
wolfville <- searchbbox("wolfville, ns",
source="google")
wolfville <- c(wv[1], wv[2], wv[3], wv[4])
names(wolfville) <- c("left", "bottom",
"right", "top")
class(wolfville) <- "bbox"
library(osmar) # (geosphere is inclued in osmar)
library(prettymapr)
wolfville <- c(-96.3534,30.6063,-96.3342,30.6268)
names(wolfville) <- c("left", "bottom",
"right", "top")
class(wolfville) <- "bbox"
osmdata <- osmar::get_osm(wolfville)
osmdata$nodes
hways_data <- subset(osmdata,
way_ids = find(osmdata,
way(tags(k == "highway"))))
hways <- find(hways_data, way(tags(k == "name")))
hways <- find_down(osmdata, way(hways))
hways_data <- subset(osmdata, ids = hways)
plot_ways(hways_data)
plot_nodes(hways_data, pch=19, cex=0.1, add=T)
plot_ways(osmdata, col="gray")
plot_ways(hways_data, add=T)
hway_nodes_attrs <- hways_data$nodes$attrs
lons <- hway_nodes_attrs$lon
lats <- hway_nodes_attrs$lat
runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/SMB SUITE/Dashboard')
runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/SMB SUITE/Dashboard')
