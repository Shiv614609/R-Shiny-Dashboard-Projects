route_json$routes$geometry
req="http://router.project-osrm.org/route/v1/driving/-96.688238,30.532807;-96.514156,30.517508;-96.448602,30.538976?alternatives=false&geometries=polyline&steps=true&overview=full&annotations=true"
resRaw = RCurl::getURL(utils::URLencode(req), useragent = "R-User")
route_json = jsonlite::fromJSON(resRaw)
route_json$routes$geometry
distance = route_json$routes$distance
rm(vres,resRaw,req,src,dst)
key_g_elevation = "AIzaSyDKh0yDCcsZ20ucIejWjPV2t4qttHazfcU"
elevation_json = googleway::google_elevation(polyline = route_json$routes$geometry, key = key_g_elevation , location_type = "path" , samples = 512)
r= "amjyDnlcmQsA}E{A_Ha@uCIeBIaBIsAAcAD_AN}@Fg@C}@O}@gC_JO_BW{C_CgVgCqW@kAd@cNT}FBeEAgEKiFy@w^EkCBiAR}BHwAQeDo@iHe@gHKqBCiAF_ATiAb@o@t@cAf@eAHo@Bm@M}@c@aAqA}AiB_Cq@_Be@}@q@gAg@yAWeAU_BWgF@aBRsDXsClBwOReBF_A?_AYcBUgAAe@Bs@Po@Rc@xDcF\a@lPcT`CyCLa@FSBaAC{@Mi@c@w@cHuIc@aAKi@Em@PsA^aCJgAh@aNf@kNJsCNuA^yCNyBN{SLuSEqEKaGGoBQw@a@_BU{@cEcKm@_BWeAo@{Cu@oGe@mGg@qEk@_H?mABk@NgCl@gHP_F?_CIgBMeAQoA{@gEkA{Fa@iDSoBE[Y}A_@mA}FiOiCwGaDmIyAiEg@kBOuAeBeTQoAK]Wk@gBwB]c@o@}@mFgJu@gAsEuHkFwM]cAkE{Kk@iB[oAQy@S_Ba@kDG{BEsCCaOD{BNaA`@}@jJ_PzBwDdEqFrBsDrFiKXs@j@aBRgA@s@Cy@UsCGi@[eLBqCKqCSqBa@oD[cCg@oDaAuHy@gGQ_BIo@m@_RCyAWaMGoGCiBEs@Ko@y@eDIk@Ek@GgDGgJEcEHaBX_DZsCF_@HQPQPGb@@tD^fAHj@AREd@OZU\]fKcMrAcAjAk@hLmE^OrMeFdBi@f@KxHgBn@Sr@YbB_AxNeKj@[l@WlA[p@IfACxMVxB?rW_@zCK|@QxKeAxI{@|AQbHw@lAU`Bc@dBm@nAi@bAi@dI}EnBqAhKuHfBgA`Ac@jBo@|KiD|@c@x@k@r@o@Za@l@_A`JmPnE}G~GeKj@u@jAqAvDoDvSmRrNwKv@q@hBmAhB{@vA_@l@KhI_AbBWv@Q`A]z@a@r@c@jAaAhAoAfA_BvKsOf@o@gAmAuA{A_A_As@o@cA{@qAcAiAs@cAi@a@SaAe@yAi@eA[aAUsA[u@Mw@MeBO{Ku@_BKqAOcAOqASkA[sA]kAe@{Ao@qAo@cAm@aAs@oAaAwAqAkAsAkGoHmAyAgGkH}BqCqCqD}GaIaAgAmCiCu@k@s@g@q@e@s@c@iAk@eAk@k@Uw@[cA_@iA[gAYiASoAQ{C]uAOeEg@{Fo@uUiC{AQcHw@oQoB}Di@qCs@k@SaDmAeCsAsCcB{BmBeAgAs@aAq@_A]g@yBgCsV}[{R}V_LqMoEuEmHiH_GmHaCsC"
r= "amjyDnlcmQsA}E{A_Ha@uCIeBIaBIsAAcAD_AN}@Fg@C}@O}@gC_JO_BW{C_CgVgCqW@kAd@cNT}FBeEAgEKiFy@w^EkCBiAR}BHwAQeDo@iHe@gHKqBCiAF_ATiAb@o@t@cAf@eAHo@Bm@M}@c@aAqA}AiB_Cq@_Be@}@q@gAg@yAWeAU_BWgF@aBRsDXsClBwOReBF_A?_AYcBUgAAe@Bs@Po@Rc@xDcF\a@lPcT`CyCLa@FSBaAC{@Mi@c@w@cHuIc@aAKi@Em@PsA^aCJgAh@aNf@kNJsCNuA^yCNyBN{SLuSEqEKaGGoBQw@a@_BU{@cEcKm@_BWeAo@{Cu@oGe@mGg@qEk@_H?mABk@NgCl@gHP_F?_CIgBMeAQoA{@gEkA{Fa@iDSoBE[Y}A_@mA}FiOiCwGaDmIyAiEg@kBOuAeBeTQoAK]Wk@gBwB]c@o@}@mFgJu@gAsEuHkFwM]cAkE{Kk@iB[oAQy@S_Ba@kDG{BEsCCaOD{BNaA`@}@jJ_PzBwDdEqFrBsDrFiKXs@j@aBRgA@s@Cy@UsCGi@[eLBqCKqCSqBa@oD[cCg@oDaAuHy@gGQ_BIo@m@_RCyAWaMGoGCiBEs@Ko@y@eDIk@Ek@GgDGgJEcEHaBX_DZsCF_@HQPQPGb@@tD^fAHj@AREd@OZU\]fKcMrAcAjAk@hLmE^OrMeFdBi@f@KxHgBn@Sr@YbB_AxNeKj@[l@WlA[p@IfACxMVxB?rW_@zCK|@QxKeAxI{@|AQbHw@lAU`Bc@dBm@nAi@bAi@dI}EnBqAhKuHfBgA`Ac@jBo@|KiD|@c@x@k@r@o@Za@l@_A`JmPnE}G~GeKj@u@jAqAvDoDvSmRrNwKv@q@hBmAhB{@vA_@l@KhI_AbBWv@Q`A]z@a@r@c@jAaAhAoAfA_BvKsOf@o@gAmAuA{A_A_As@o@cA{@qAcAiAs@cAi@a@SaAe@yAi@eA[aAUsA[u@Mw@MeBO{Ku@_BKqAOcAOqASkA[sA]kAe@{Ao@qAo@cAm@aAs@oAaAwAqAkAsAkGoHmAyAgGkH}BqCqCqD}GaIaAgAmCiCu@k@s@g@q@e@s@c@iAk@eAk@k@Uw@[cA_@iA[gAYiASoAQ{C]uAOeEg@{Fo@uUiC{AQcHw@oQoB}Di@qCs@k@SaDmAeCsAsCcB{BmBeAgAs@aAq@_A]g@yBgCsV}[{R}V_LqMoEuEmHiH_GmHaCsC"
elevation_json = googleway::google_elevation(polyline = "amjyDnlcmQsA}E{A_Ha@uCIeBIaBIsAAcAD_AN}@Fg@C}@O}@gC_JO_BW{C_CgVgCqW@kAd@cNT}FBeEAgEKiFy@w^EkCBiAR}BHwAQeDo@iHe@gHKqBCiAF_ATiAb@o@t@cAf@eAHo@Bm@M}@c@aAqA}AiB_Cq@_Be@}@q@gAg@yAWeAU_BWgF@aBRsDXsClBwOReBF_A?_AYcBUgAAe@Bs@Po@Rc@xDcF\a@lPcT`CyCLa@FSBaAC{@Mi@c@w@cHuIc@aAKi@Em@PsA^aCJgAh@aNf@kNJsCNuA^yCNyBN{SLuSEqEKaGGoBQw@a@_BU{@cEcKm@_BWeAo@{Cu@oGe@mGg@qEk@_H?mABk@NgCl@gHP_F?_CIgBMeAQoA{@gEkA{Fa@iDSoBE[Y}A_@mA}FiOiCwGaDmIyAiEg@kBOuAeBeTQoAK]Wk@gBwB]c@o@}@mFgJu@gAsEuHkFwM]cAkE{Kk@iB[oAQy@S_Ba@kDG{BEsCCaOD{BNaA`@}@jJ_PzBwDdEqFrBsDrFiKXs@j@aBRgA@s@Cy@UsCGi@[eLBqCKqCSqBa@oD[cCg@oDaAuHy@gGQ_BIo@m@_RCyAWaMGoGCiBEs@Ko@y@eDIk@Ek@GgDGgJEcEHaBX_DZsCF_@HQPQPGb@@tD^fAHj@AREd@OZU\]fKcMrAcAjAk@hLmE^OrMeFdBi@f@KxHgBn@Sr@YbB_AxNeKj@[l@WlA[p@IfACxMVxB?rW_@zCK|@QxKeAxI{@|AQbHw@lAU`Bc@dBm@nAi@bAi@dI}EnBqAhKuHfBgA`Ac@jBo@|KiD|@c@x@k@r@o@Za@l@_A`JmPnE}G~GeKj@u@jAqAvDoDvSmRrNwKv@q@hBmAhB{@vA_@l@KhI_AbBWv@Q`A]z@a@r@c@jAaAhAoAfA_BvKsOf@o@gAmAuA{A_A_As@o@cA{@qAcAiAs@cAi@a@SaAe@yAi@eA[aAUsA[u@Mw@MeBO{Ku@_BKqAOcAOqASkA[sA]kAe@{Ao@qAo@cAm@aAs@oAaAwAqAkAsAkGoHmAyAgGkH}BqCqCqD}GaIaAgAmCiCu@k@s@g@q@e@s@c@iAk@eAk@k@Uw@[cA_@iA[gAYiASoAQ{C]uAOeEg@{Fo@uUiC{AQcHw@oQoB}Di@qCs@k@SaDmAeCsAsCcB{BmBeAgAs@aAq@_A]g@yBgCsV}[{R}V_LqMoEuEmHiH_GmHaCsC", key = key_g_elevation , location_type = "path" , samples = 512)
elevation_json = googleway::google_elevation(polyline = "amjyDnlcmQsA}E{A_Ha@uCIeBIaBIsAAcAD_AN}@Fg@C}@O}@gC_JO_BW{C_CgVgCqW@kAd@cNT}FBeEAgEKiFy@w^EkCBiAR}BHwAQeDo@iHe@gHKqBCiAF_ATiAb@o@t@cAf@eAHo@Bm@M}@c@aAqA}AiB_Cq@_Be@}@q@gAg@yAWeAU_BWgF@aBRsDXsClBwOReBF_A?_AYcBUgAAe@Bs@Po@Rc@xDcF\a@lPcT`CyCLa@FSBaAC{@Mi@c@w@cHuIc@aAKi@Em@PsA^aCJgAh@aNf@kNJsCNuA^yCNyBN{SLuSEqEKaGGoBQw@a@_BU{@cEcKm@_BWeAo@{Cu@oGe@mGg@qEk@_H?mABk@NgCl@gHP_F?_CIgBMeAQoA{@gEkA{Fa@iDSoBE[Y}A_@mA}FiOiCwGaDmIyAiEg@kBOuAeBeTQoAK]Wk@gBwB]c@o@}@mFgJu@gAsEuHkFwM]cAkE{Kk@iB[oAQy@S_Ba@kDG{BEsCCaOD{BNaA`@}@jJ_PzBwDdEqFrBsDrFiKXs@j@aBRgA@s@Cy@UsCGi@[eLBqCKqCSqBa@oD[cCg@oDaAuHy@gGQ_BIo@m@_RCyAWaMGoGCiBEs@Ko@y@eDIk@Ek@GgDGgJEcEHaBX_DZsCF_@HQPQPGb@@tD^fAHj@AREd@OZU\]fKcMrAcAjAk@hLmE^OrMeFdBi@f@KxHgBn@Sr@YbB_AxNeKj@[l@WlA[p@IfACxMVxB?rW_@zCK|@QxKeAxI{@|AQbHw@lAU`Bc@dBm@nAi@bAi@dI}EnBqAhKuHfBgA`Ac@jBo@|KiD|@c@x@k@r@o@Za@l@_A`JmPnE}G~GeKj@u@jAqAvDoDvSmRrNwKv@q@hBmAhB{@vA_@l@KhI_AbBWv@Q`A]z@a@r@c@jAaAhAoAfA_BvKsOf@o@gAmAuA{A_A_As@o@cA{@qAcAiAs@cAi@a@SaAe@yAi@eA[aAUsA[u@Mw@MeBO{Ku@_BKqAOcAOqASkA[sA]kAe@{Ao@qAo@cAm@aAs@oAaAwAqAkAsAkGoHmAyAgGkH}BqCqCqD}GaIaAgAmCiCu@k@s@g@q@e@s@c@iAk@eAk@k@Uw@[cA_@iA[gAYiASoAQ{C]uAOeEg@{Fo@uUiC{AQcHw@oQoB}Di@qCs@k@SaDmAeCsAsCcB{BmBeAgAs@aAq@_A]g@yBgCsV}[{R}V_LqMoEuEmHiH_GmHaCsC", key = key_g_elevation , location_type = "path" , samples = 512)
elevation_json = googleway::google_elevation(polyline = amjyDnlcmQsA}E{A_Ha@uCIeBIaBIsAAcAD_AN}@Fg@C}@O}@gC_JO_BW{C_CgVgCqW@kAd@cNT}FBeEAgEKiFy@w^EkCBiAR}BHwAQeDo@iHe@gHKqBCiAF_ATiAb@o@t@cAf@eAHo@Bm@M}@c@aAqA}AiB_Cq@_Be@}@q@gAg@yAWeAU_BWgF@aBRsDXsClBwOReBF_A?_AYcBUgAAe@Bs@Po@Rc@xDcF\a@lPcT`CyCLa@FSBaAC{@Mi@c@w@cHuIc@aAKi@Em@PsA^aCJgAh@aNf@kNJsCNuA^yCNyBN{SLuSEqEKaGGoBQw@a@_BU{@cEcKm@_BWeAo@{Cu@oGe@mGg@qEk@_H?mABk@NgCl@gHP_F?_CIgBMeAQoA{@gEkA{Fa@iDSoBE[Y}A_@mA}FiOiCwGaDmIyAiEg@kBOuAeBeTQoAK]Wk@gBwB]c@o@}@mFgJu@gAsEuHkFwM]cAkE{Kk@iB[oAQy@S_Ba@kDG{BEsCCaOD{BNaA`@}@jJ_PzBwDdEqFrBsDrFiKXs@j@aBRgA@s@Cy@UsCGi@[eLBqCKqCSqBa@oD[cCg@oDaAuHy@gGQ_BIo@m@_RCyAWaMGoGCiBEs@Ko@y@eDIk@Ek@GgDGgJEcEHaBX_DZsCF_@HQPQPGb@@tD^fAHj@AREd@OZU\]fKcMrAcAjAk@hLmE^OrMeFdBi@f@KxHgBn@Sr@YbB_AxNeKj@[l@WlA[p@IfACxMVxB?rW_@zCK|@QxKeAxI{@|AQbHw@lAU`Bc@dBm@nAi@bAi@dI}EnBqAhKuHfBgA`Ac@jBo@|KiD|@c@x@k@r@o@Za@l@_A`JmPnE}G~GeKj@u@jAqAvDoDvSmRrNwKv@q@hBmAhB{@vA_@l@KhI_AbBWv@Q`A]z@a@r@c@jAaAhAoAfA_BvKsOf@o@gAmAuA{A_A_As@o@cA{@qAcAiAs@cAi@a@SaAe@yAi@eA[aAUsA[u@Mw@MeBO{Ku@_BKqAOcAOqASkA[sA]kAe@{Ao@qAo@cAm@aAs@oAaAwAqAkAsAkGoHmAyAgGkH}BqCqCqD}GaIaAgAmCiCu@k@s@g@q@e@s@c@iAk@eAk@k@Uw@[cA_@iA[gAYiASoAQ{C]uAOeEg@{Fo@uUiC{AQcHw@oQoB}Di@qCs@k@SaDmAeCsAsCcB{BmBeAgAs@aAq@_A]g@yBgCsV}[{R}V_LqMoEuEmHiH_GmHaCsC , key = key_g_elevation , location_type = "path" , samples = 512)
elevation_json = googleway::google_elevation(polyline = amjyDnlcmQsA}E{A_Ha@uCIeBIaBIsAAcAD_AN}@Fg@C}@O}@gC_JO_BW{C_CgVgCqW@kAd@cNT}FBeEAgEKiFy@w^EkCBiAR}BHwAQeDo@iHe@gHKqBCiAF_ATiAb@o@t@cAf@eAHo@Bm@M}@c@aAqA}AiB_Cq@_Be@}@q@gAg@yAWeAU_BWgF@aBRsDXsClBwOReBF_A?_AYcBUgAAe@Bs@Po@Rc@xDcF\a@lPcT`CyCLa@FSBaAC{@Mi@c@w@cHuIc@aAKi@Em@PsA^aCJgAh@aNf@kNJsCNuA^yCNyBN{SLuSEqEKaGGoBQw@a@_BU{@cEcKm@_BWeAo@{Cu@oGe@mGg@qEk@_H?mABk@NgCl@gHP_F?_CIgBMeAQoA{@gEkA{Fa@iDSoBE[Y}A_@mA}FiOiCwGaDmIyAiEg@kBOuAeBeTQoAK]Wk@gBwB]c@o@}@mFgJu@gAsEuHkFwM]cAkE{Kk@iB[oAQy@S_Ba@kDG{BEsCCaOD{BNaA`@}@jJ_PzBwDdEqFrBsDrFiKXs@j@aBRgA@s@Cy@UsCGi@[eLBqCKqCSqBa@oD[cCg@oDaAuHy@gGQ_BIo@m@_RCyAWaMGoGCiBEs@Ko@y@eDIk@Ek@GgDGgJEcEHaBX_DZsCF_@HQPQPGb@@tD^fAHj@AREd@OZU\]fKcMrAcAjAk@hLmE^OrMeFdBi@f@KxHgBn@Sr@YbB_AxNeKj@[l@WlA[p@IfACxMVxB?rW_@zCK|@QxKeAxI{@|AQbHw@lAU`Bc@dBm@nAi@bAi@dI}EnBqAhKuHfBgA`Ac@jBo@|KiD|@c@x@k@r@o@Za@l@_A`JmPnE}G~GeKj@u@jAqAvDoDvSmRrNwKv@q@hBmAhB{@vA_@l@KhI_AbBWv@Q`A]z@a@r@c@jAaAhAoAfA_BvKsOf@o@gAmAuA{A_A_As@o@cA{@qAcAiAs@cAi@a@SaAe@yAi@eA[aAUsA[u@Mw@MeBO{Ku@_BKqAOcAOqASkA[sA]kAe@{Ao@qAo@cAm@aAs@oAaAwAqAkAsAkGoHmAyAgGkH}BqCqCqD}GaIaAgAmCiCu@k@s@g@q@e@s@c@iAk@eAk@k@Uw@[cA_@iA[gAYiASoAQ{C]uAOeEg@{Fo@uUiC{AQcHw@oQoB}Di@qCs@k@SaDmAeCsAsCcB{BmBeAgAs@aAq@_A]g@yBgCsV}[{R}V_LqMoEuEmHiH_GmHaCsC, key = key_g_elevation , location_type = "path" , samples = 512)
req="http://router.project-osrm.org/route/v1/driving/-96.688238,30.532807;-96.514156,30.517508;-96.448602,30.538976?alternatives=false&geometries=polyline&steps=true&overview=full&annotations=true"
resRaw = RCurl::getURL(utils::URLencode(req), useragent = "R-User")
vres = jsonlite::validate(resRaw)[1]
resRaw = gsub(pattern = "[\\]", replacement = "tilapia", x = resRaw)
route_json = jsonlite::fromJSON(resRaw)
elevation_json = googleway::google_elevation(polyline = route_json$routes$geometry, key = key_g_elevation , location_type = "path" , samples = 512)
route_json$routes$geometry = gsub(pattern = "tilapia", replacement = "\\\\", x = route_json$routes$geometry)
elevation_json = googleway::google_elevation(polyline = route_json$routes$geometry, key = key_g_elevation , location_type = "path" , samples = 512)
src = c(30.538346,-96.691991) #(lat,lon)
dst = c(30.687838,-96.372954) #(lat,lon)
req = paste("http://router.project-osrm.org/", "route/v1/", "driving", "/", src[2], ",", src[1], ";", dst[2], ",", dst[1],        "?alternatives=false&geometries=polyline&steps=true&overview=full&annotations=true", sep = "")
resRaw = RCurl::getURL(utils::URLencode(req), useragent = "R-User")
vres = jsonlite::validate(resRaw)[1]
if (!vres)
resRaw = gsub(pattern = "[\\]", replacement = "tilapia", x = resRaw)
route_json = jsonlite::fromJSON(resRaw)
if (!vres)
route_json$routes$geometry = gsub(pattern = "tilapia", replacement = "\\\\", x = route_json$routes$geometry)
distance = route_json$routes$distance
rm(vres,resRaw,req,src,dst)
key_g_elevation = "AIzaSyDKh0yDCcsZ20ucIejWjPV2t4qttHazfcU"
elevation_json = googleway::google_elevation(polyline = route_json$routes$geometry, key = key_g_elevation , location_type = "path" , samples = 512)
shiny::runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/HISCO/dashboard/project1')
runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/HISCO/dashboard/project1')
runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/HISCO/dashboard/project1')
a=plotly::wind
View(a)
names(calls)
calls<-read.csv("./Data/AllContacts.csv")
setwd("C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/SMB SUITE/Dashboard")
calls<-read.csv("./Data/AllContacts.csv")
names(calls)
initiated = calls %>%
select(Call.Status) %>%
count()
View(initiated)
initiated = calls %>%
select(Call.Status) %>%
summarise_each(funs(count))
initiated = calls %>%
select(Call.Status) %>%
summarise_all(funs(count))
names(initiated)
names(calls)
initiated = calls %>%
select(Call.Status) %>%
mutate(Leads = count(Call.Status == "Lead"))
initiated = calls %>%
select(Call.Status) %>%
mutate(Leads = count(Call.Status = "Lead"))
initiated = calls %>%
select(Call.Status) %>%
transmute(Leads = count(Call.Status = "Lead"))
initiated = calls %>%
select(Call.Status)
View(initiated)
initiated = calls %>%
select(Call.Status) %>%
transmute(Leads = count(Lead))
initiated = calls %>%
select(Call.Status) %>%
transmute(Leads = count(Call.Status = Lead))
initiated = calls %>%
select(Call.Status) %>%
group_by()
View(initiated)
initiated = calls %>%
select(Call.Status) %>%
group_by() %>%
summarise()
initiated = calls %>%
select(Call.Status) %>%
group_by() %>%
summarise(Count = count())
initiated = calls %>%
select(Call.Status) %>%
group_by(Call.Status)
View(initiated)
initiated = calls %>%
select(Call.Status) %>%
group_by(Call.Status) %>%
summarise(Count = count(Call.Status))
calls$Call.Status = as.character("calls$Call.Status")
initiated = calls %>%
select(Call.Status) %>%
group_by(Call.Status) %>%
summarise(Count = count(Call.Status))
initiated = calls %>%
select(Call.Status) %>%
summarise(Count = count(Call.Status))
initiated = calls %>%
select(Call.Status) %>%
group_by(Call.Status)
View(initiated)
calls<-read.csv("./Data/AllContacts.csv")
calls$Call.Status = as.character(calls$Call.Status)
initiated = calls %>%
select(Call.Status) %>%
group_by(Call.Status) %>%
summarise(Count = count(Call.Status))
initiated = calls %>%
select(Call.Status) %>%
group_by(Call.Status)
View(initiated)
initiated = calls %>%
select(Call.Status) %>%
group_by(Call.Status) %>%
summarise(Count = count())
names(ca)
initiated = calls %>%
select(Call.Status) %>%
summarise(Count = count())
initiated = calls %>%
select(Call.Status) %>%
summarise(Count = count(Call.Status))
calls<-read.csv("./Data/AllContacts.csv")
initiated = calls %>%
select(Call.Status) %>%
dplyr::group_by()
View(initiated)
initiated = calls %>%
select(Call.Status) %>%
dplyr::group_by() %>%
summarise(Count = count(Call.Status))
initiated = calls %>%
select(Call.Status) %>%
dplyr::group_by(Call.Status)
initiated = calls %>%
select(Call.Status) %>%
dplyr::group_by(Call.Status) %>%
summarise(Count = count(Call.Status))
initiated = calls %>%
select(Call.Status) %>%
dplyr::group_by(Call.Status) %>%
summarise(Count = n(Call.Status))
initiated = calls %>%
select(Call.Status) %>%
dplyr::group_by(Call.Status) %>%
summarise(Count = n())
View(initiated)
initiated = calls %>%
select(Call.Status) %>%
filter(Call.Status!="Open") %>%
dplyr::group_by(Call.Status) %>%
summarise(Count = n())
sum(initiated$Count)
weekly<-read.csv("./Data/All_Spec_CallTracker-v1.0.xlsx - WeeklyProgress.csv")
progress= data.frame(y = "Survey Status" , Initiated =  round(perc, 2) , Not_Initiated = 100 - round(perc,2))
initiated = sum(weekly[nrow(weekly), c("Completed", "Does.Not.remember","Follow.up" , "No.response" , "Partially.Completed" , "Wrong.Person")])
perc =initiated*100/weekly$Grand.Total[nrow(weekly)]
progress= data.frame(y = "Survey Status" , Initiated =  round(perc, 2) , Not_Initiated = 100 - round(perc,2))
setwd("C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/HISCO/dashboard/project1")
weekly<-read.csv("./Data/All_Spec_CallTracker-v1.0.xlsx - WeeklyProgress.csv")
initiated = sum(weekly[nrow(weekly), c("Completed", "Does.Not.remember","Follow.up" , "No.response" , "Partially.Completed" , "Wrong.Person")])
perc =initiated*100/weekly$Grand.Total[nrow(weekly)]
progress= data.frame(y = "Survey Status" , Initiated =  round(perc, 2) , Not_Initiated = 100 - round(perc,2))
View(progress)
setwd("C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/SMB SUITE/Dashboard")
calls<-read.csv("./Data/AllContacts.csv")
initiated = calls %>%
select(Call.Status) %>%
filter(Call.Status!="Open") %>%
dplyr::group_by(Call.Status) %>%
summarise(Count = n())
perc = sum(initiated$Count)*100/nrows(calls)
perc = sum(initiated$Count)*100/nrow(calls)
progress= data.frame(y = "Survey Status" , Initiated =  round(perc, 2) , Not_Initiated = 100 - round(perc,2))
plot_ly(progress, x = ~Initiated, y = ~y, type = 'bar', orientation = 'h', marker = list( color = 'rgb(255, 132, 26)',width = 1) , name = 'Survey Initiated', hoverinfo="x")%>%
add_trace(x = ~Not_Initiated ,  marker = list(color = 'rgba(240, 142, 29, 0.45)') , name = 'Survey Not Initiated' , hoverinfo="x") %>%
layout(title='Overall Progress',
xaxis = list(title = paste0("Last Update on ", format(Sys.Date(), "%m/%d/%Y"))),
yaxis = list(title = "",
showticklabels = FALSE),
barmode = 'stack',
showlegend = F) %>%
add_annotations(xref = 'x', yref = 'paper',
x = 50, y = 0.5,
text = paste0("Survey Initiated with ", initiated , " (",round(progress$Initiated[1],2), '%',")" , " contacts"),
font = list(family = 'Arial', size = 14,color = 'rgb(0, 0, 0)'),
showarrow = FALSE)
plot_ly(progress, x = ~Initiated, y = ~y, type = 'bar', orientation = 'h', marker = list( color = 'rgb(255, 132, 26)',width = 1) , name = 'Survey Initiated', hoverinfo="x")%>%
add_trace(x = ~Not_Initiated ,  marker = list(color = 'rgba(240, 142, 29, 0.45)') , name = 'Survey Not Initiated' , hoverinfo="x") %>%
layout(title='Overall Progress',
xaxis = list(title = paste0("Last Update on ", format(Sys.Date(), "%m/%d/%Y"))),
yaxis = list(title = "",
showticklabels = FALSE),
barmode = 'stack',
showlegend = F) %>%
add_annotations(xref = 'x', yref = 'paper',
x = 50, y = 0.5,
text = paste0("Calls Initiated with ", initiated , " (",round(progress$Initiated[1],2), '%',")" , " contacts"),
font = list(family = 'Arial', size = 14,color = 'rgb(0, 0, 0)'),
showarrow = FALSE)
round(progress$Initiated[1],2)
initiated
plot_ly(progress, x = ~Initiated, y = ~y, type = 'bar', orientation = 'h', marker = list( color = 'rgb(255, 132, 26)',width = 1) , name = 'Survey Initiated', hoverinfo="x")%>%
add_trace(x = ~Not_Initiated ,  marker = list(color = 'rgba(240, 142, 29, 0.45)') , name = 'Survey Not Initiated' , hoverinfo="x") %>%
layout(title='Overall Progress',
xaxis = list(title = paste0("Last Update on ", format(Sys.Date(), "%m/%d/%Y"))),
yaxis = list(title = "",
showticklabels = FALSE),
barmode = 'stack',
showlegend = F) %>%
add_annotations(xref = 'x', yref = 'paper',
x = 50, y = 0.5,
text = paste0("Calls Initiated with ", sum(initiated$Count) , " (",round(progress$Initiated[1],2), '%',")" , " contacts"),
font = list(family = 'Arial', size = 14,color = 'rgb(0, 0, 0)'),
showarrow = FALSE)
runApp()
initiated$Count[initiated$Call.Status == "Lead"]
initiated$Count[initiated$Call.Status == "Follow-up"]
colors <- c('rgb(0, 166, 90)', 'rgb(95, 93, 168)' ,'rgb(56, 204, 204)', 'rgb(187, 64, 48)', 'rgb(62, 153, 112)', 'rgb(217, 26, 96)')
plot_ly(initiated,
labels = ~call.status, values = ~Count, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'label+percent',
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE) %>%
layout(title = 'Status of the Initiated Calls',
font = list(
family = "sans serif",
size = 14.5),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
View(initiated)
plot_ly(initiated,
labels = ~call.Status, values = ~Count, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'label+percent',
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE) %>%
layout(title = 'Status of the Initiated Calls',
font = list(
family = "sans serif",
size = 14.5),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
plot_ly(initiated,
labels = ~Call.Status, values = ~Count, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'label+percent',
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE) %>%
layout(title = 'Status of the Initiated Calls',
font = list(
family = "sans serif",
size = 14.5),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(calls)
leads = calls %>%
select(Lead.Status) %>%
dplyr::group_by(Lead.Status) %>%
summarise(Count = n())
View(leads)
leads = calls %>%
select(Lead.Status)
important = calls %>%
filter(Call.Status!="Open") %>%
select(Point.of.Contact.Status) %>%
dplyr::group_by(Point.of.Contact.Status) %>%
summarise(Count = n())
View(important)
calls$Point.of.Contact.Status[is.na(calls$Point.of.Contact.Status)] = "Not Sure"
important = calls %>%
filter(Call.Status!="Open") %>%
select(Point.of.Contact.Status) %>%
dplyr::group_by(Point.of.Contact.Status) %>%
summarise(Count = n())
View(important)
is.na(calls$Point.of.Contact.Status)
View(calls)
calls$Point.of.Contact.Status[calls$Point.of.Contact.Status == ""] = "Not Sure"
important = calls %>%
filter(Call.Status!="Open") %>%
select(Point.of.Contact.Status) %>%
dplyr::group_by(Point.of.Contact.Status) %>%
summarise(Count = n())
Companies = calls %>%
filter(Call.Status!="Open") %>%
select(Company.Name) %>%
count()
View(Companies)
View(Companies)
Companies = calls %>%
filter(Call.Status!="Open") %>%
select(Company.Name) %>%
dplyr::group_by(Company.Name) %>%
count()
View(Companies)
Companies_called = nrow(calls %>%
filter(Call.Status!="Open") %>%
select(Company.Name) %>%
dplyr::group_by(Company.Name) %>%
count())
companies_total =nrow(calls %>%
select(Company.Name) %>%
dplyr::group_by(Company.Name) %>%
count())
Companies_called = nrow(calls %>%
filter(Call.Status!="Open") %>%
select(Company.Name) %>%
dplyr::group_by(Company.Name) %>%
count())
companies_total =nrow(calls %>%
select(Company.Name) %>%
dplyr::group_by(Company.Name) %>%
count())
perc_comp = Companies_called*100/companies_total
Companies_called = nrow(calls %>%
filter(Call.Status!="Open") %>%
select(Company.Name) %>%
dplyr::group_by(Company.Name) %>%
count())
companies_total =nrow(calls %>%
select(Company.Name) %>%
dplyr::group_by(Company.Name) %>%
count())
perc_comp = Companies_called*100/companies_total
progress_companies =data.frame(y = "Companies Status" , Initiated =  round(perc_comp, 2) , Not_Initiated = 100 - round(perc_comp,2))
View(progress_companies)
runApp()
runApp()
runApp()
runApp()
calls %>%
select(Contact.Type) %>%
dplyr::group_by(Contact.Type) %>%
count()
new= nrow(calls %>%
select(Contact.Type) %>%
filter(Contact.Type="New") %>%
dplyr::group_by(Contact.Type) %>%
count())
new= nrow(calls %>%
select(Contact.Type) %>%
filter(Contact.Type=="New") %>%
dplyr::group_by(Contact.Type) %>%
count())
new= nrow(calls %>%
select(Contact.Type) %>%
filter(Contact.Type=="New") %>%
count())
new= nrow(calls %>%
select(Contact.Type) %>%
filter(Contact.Type=="New"))
runApp()
runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/HISCO/dashboard/project1')
runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/HISCO/dashboard/project1')
weekly<-read.csv("./Data/All_Spec_CallTracker-v1.0.xlsx - WeeklyProgress.csv")
setwd("C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/HISCO/dashboard/project1")
weekly<-read.csv("./Data/All_Spec_CallTracker-v1.0.xlsx - WeeklyProgress.csv")
runApp()
runApp()
runApp()
runApp()
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.5) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), trans = 'reverse') +
scale_fill_manual(values = colour) +
theme(
axis.text = element_blank(),          axis.title = element_blank(),
axis.ticks = element_blank(),          legend.title = element_blank(),          legend.position = "right")
View(weekly)
plot_ly(weekly_tracker, x = ~Completed, y = ~Week, type = 'bar', orientation = 'h',
marker = list(color = 'rgb(0, 166, 90)',line = list(color = 'rgb(248, 248, 249)', width = 1)),
hoverinfo="x" , name = "Completed Surveys") %>%
add_trace(x = ~Partially.Completed, marker = list(color = 'rgb(62, 153, 112)') , name = "Partially Completed") %>%
add_trace(x = ~Follow.up, marker = list(color = 'rgb(56, 204, 204)') , name = "Follow-up") %>%
add_trace(x = ~Does.Not.remember, marker = list(color = 'rgb(95, 93, 168)') ,  name = "Does Not Remember") %>%
add_trace(x = ~No.response, marker = list(color = 'rgb(187, 64, 48)') , name = "No Response") %>%
add_trace(x = ~Wrong.Person, marker = list(color = 'rgb(217, 26, 96)') , name= "Wrong Person") %>%
layout(title = 'Distribution of the Initiated Calls',
xaxis = list(title = "#Contacts",
showgrid = T,
showline = T,
showticklabels = T,
zeroline = T),
yaxis = list(title = "",
showgrid = FALSE,
showline = FALSE,
showticklabels = T,
zeroline = FALSE),
barmode = 'stack',
showlegend = T,
legend = list(orientation = 'h' , y=-0.15)
)
weekly<-read.csv("./Data/All_Spec_CallTracker-v1.0.xlsx - WeeklyProgress.csv")
runApp()
runApp()
runApp()
runApp()
nrows <- 25
df <- expand.grid(y = 1:nrows, x = 1:nrows)
categ_table <- round(weekly[nrow(weekly), 2:8] * ((nrows*nrows)/weekly$Grand.Total[nrow(weekly)]))
df$category <- factor(rep(names(categ_table), categ_table))
runApp()
runApp()
runApp()
setwd("C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/HISCO/dashboard/project1")
runApp()
runApp()
View(weekly)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/SMB SUITE/Dashboard')
runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/SMB SUITE/Dashboard')
runApp()
runApp()
runApp()
runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/SMB SUITE/Dashboard')
runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/SMB SUITE/Dashboard')
runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/SMB SUITE/Dashboard')
runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/SMB SUITE/Dashboard')
View(progress_companies)
plot_ly(progress_companies, x = ~Initiated, y = ~y, type = 'bar', orientation = 'h', marker = list( color = 'rgb(255, 132, 26)',width = 1) , name = 'Survey Initiated', hoverinfo="x")%>%
add_trace(x = ~Not_Initiated ,  marker = list(color = 'rgba(240, 142, 29, 0.45)') , name = 'Survey Not Initiated' , hoverinfo="x") %>%
layout(title='Overall Progress',
xaxis = list(title = paste0("Last Update on ", format(Sys.Date(), "%m/%d/%Y"))),
yaxis = list(title = "",
showticklabels = FALSE),
barmode = 'stack',
showlegend = F) %>%
add_annotations(xref = 'x', yref = 'paper',
x = 50, y = 0.5,
text = paste0("Calls Initiated with ", sum(initiated$Count) , " (",round(progress$Initiated[1],2), '%',")" , " contacts"),
font = list(family = 'Arial', size = 14,color = 'rgb(0, 0, 0)'),
showarrow = FALSE)
plot_ly(progress_companies, x = ~Initiated, y = ~y, type = 'bar', orientation = 'h', marker = list( color = 'rgb(255, 132, 26)',width = 1) , name = 'Survey Initiated', hoverinfo="x")%>%
add_trace(x = ~Not_Initiated ,  marker = list(color = 'rgba(240, 142, 29, 0.45)') , name = 'Survey Not Initiated' , hoverinfo="x") %>%
layout(title='Overall Progress',
xaxis = list(title = paste0("Last Update on ", format(Sys.Date(), "%m/%d/%Y"))),
yaxis = list(title = "",
showticklabels = FALSE),
barmode = 'stack',
showlegend = F) %>%
add_annotations(xref = 'x', yref = 'paper',
x = 50, y = 0.5,
text = paste0("Calls Initiated with ", Companies_called , " (",round(perc_comp,2), '%',")" , " companies"),
font = list(family = 'Arial', size = 14,color = 'rgb(0, 0, 0)'),
showarrow = FALSE)
runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/SMB SUITE/Dashboard')
runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/SMB SUITE/Dashboard')
runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/SMB SUITE/Dashboard')
runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/SMB SUITE/Dashboard')
runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/SMB SUITE/Dashboard')
runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/SMB SUITE/Dashboard')
runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/SMB SUITE/Dashboard')
runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/SMB SUITE/Dashboard')
View(leads)
runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/SMB SUITE/Dashboard')
names(calls)
runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/SMB SUITE/Dashboard')
runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/SMB SUITE/Dashboard')
View(leads)
leads = calls %>%
filer(Call.Status=="Lead")
leads = calls %>%
filter(Call.Status=="Lead")
leads = calls %>%
filter(Call.Status=="Lead") %>%
select(Lead...Status) %>%
dplyr::group_by(Lead...Status) %>%
summarise(Count = n())
?validColors
runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/SMB SUITE/Dashboard')
runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/SMB SUITE/Dashboard')
runApp('C:/Users/adithyaajith/Google Drive/TAMU/Talent Incubator/Business Development/SMB SUITE/Dashboard')
